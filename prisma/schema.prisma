generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Offer {
  id           Int         @id @default(autoincrement())
  accentColor  String      @default("#1E3A8A")
  status       OfferStatus @default(SAVED)
  finishedStatus FinishedStatus @default(NOT_FINISHED)
  source       String
  fileId       Int?
  file         File?      @relation(fields: [fileId], references: [id])
  company      String
  position     String
  description  String?
  location     String
  dateAdded    DateTime    @default(now())
  dateUpdated  DateTime    @updatedAt
  expiresAt    DateTime
  tags         String[]
  notes        Note[]
  requirements String?
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
}

model File {
  id           Int     @id @default(autoincrement())
  user         User    @relation(fields: [userId], references: [id])
  userId       Int
  publicId     String  @unique
  assetId      String
  format       String
  createdAt    DateTime
  bytes        Int
  fileUrl      String
  thumbnail    String
  Offer        Offer[]
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  offers   Offer[]
  files  File[]
  lastGptUsage DateTime?
}

enum OfferStatus {
  SAVED
  SENT
  INTERVIEW
  FINISHED
}

enum FinishedStatus {
  NOT_FINISHED
  NO_RESPONSE
  HR_REJECTED
  TECHNICAL_REJECTED
  HOME_ASSIGNMENT_REJECTED
  FINAL_REJECTED
  OFFER_DECLINED
  OFFER_ACCEPTED
}

model Note {
    id        String   @id @default(cuid())
    content   String
    createdAt DateTime @default(now())
    offer     Offer    @relation(fields: [offerId], references: [id])
    offerId   Int

    @@index([offerId])
}
